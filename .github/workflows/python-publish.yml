# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy_with_bdist_wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-13, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make dev
    - name: Build wheel on ${{ matrix.os }}
      run: |
        make build
    - name: Rename macos filename
      if: ${{ matrix.os == 'macos-13' || matrix.os == 'macos-14' || matrix.os == 'macos-latest' }}
      run: |
        python -c "
        from pathlib import Path
        import subprocess
        replaced = subprocess.run(['sw_vers', '-productVersion'], capture_output=True, text=True).stdout.strip().split('.', 1)[0] + '_0'
        for whl_file in Path('./dist').glob('*.whl'):
            parts = whl_file.name.split('_')
            be_replaced = '_'.join(parts[1:3])
            new_name = whl_file.name.replace(be_replaced, replaced)
            new_whl_file = whl_file.with_name(new_name)
            whl_file.rename(new_whl_file)
            print(f'Renamed: {whl_file} -> {new_whl_file}')
        "
    - name: Build the project
      if: ${{ (matrix.os != 'macos-13' || matrix['python-version'] != '3.11') && (matrix.os != 'macos-13' || matrix['python-version'] != '3.12') }}
      run: |
        make build
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
      run: |
        twine check dist/*.whl
        twine upload --repository-url https://test.pypi.org/legacy/ dist/*.whl --verbose

  deploy_with_manylinux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Build wheel on Linux
      uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
      with:
        # not supporting 3.6 due to annotations is not supported https://stackoverflow.com/a/52890129
        python-versions: 'cp38-cp38 cp39-cp39 cp310-cp310 cp311-cp311 cp312-cp312'
        build-requirements: 'numpy cython'
    - name: Install dependencies
      run: |
        python -m pip install twine
        python -m pip list
    - name: Build and publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
      run: |
        ls dist
        twine check dist/*.whl
        twine upload --repository-url https://test.pypi.org/legacy/ dist/pyqlib-*-manylinux*.whl --verbose

  # build_wheels:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest, ubuntu-latest, macos-13, macos-latest]

  #   steps:
  #   - name: Checkout repo
  #     uses: actions/checkout@v4

  #   # - name: Set up Python ${{ matrix.python-version }}
  #   #   uses: actions/setup-python@v5
  #   #   with:
  #   #     python-version: ${{ matrix.python-version }}
    
  #   # - name: Install cibuildwheel
  #   #   run: |
  #   #     python -m pip install --upgrade pip
  #   #     python -m pip install cibuildwheel

  #   # - name: Build wheel
  #   #   run: |
  #   #     python -m cibuildwheel --output-dir dist

  #   - name: Build wheel
  #     uses: pypa/cibuildwheel@v2.22.0
  #     with:
  #       package-dir: .
  #       output-dir: dist
  #       config-file: "pyproject.toml"

  #   - name: Upload wheel
  #     env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.TESTPYPI_TOKEN }}
  #     run: |
  #       ls dist
  #       twine check dist/*.whl
  #       twine upload --repository-url https://test.pypi.org/legacy/ dist/*.whl
